name: release

on:
  push:
    branches:
      - main
    paths:
      - go.mod
      - go.sum
      - '**.go'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: login to ghcr.io
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5

      - name: Git Config for Unit Tests
        run: |
          git config --global user.email ci
          git config --global user.name ci
          git config --global init.defaultBranch main

      - name: Run Unit Tests
        run: |
          make test

      - name: Build binary
        run: |
          make build
          chmod +x ./autotag/autotag

      - name: Autotag Merge Commit
        # TODO: replace this with GitHub Action after #41
        run: |
          ./autotag/autotag

          echo "tags:" && git tag -l

      - name: Install rpm
        run: |
          sudo apt-get -qqy update && sudo apt-get -qqy install rpm

      # setup qemu and buildx for cross-builds (arm64)
      - name: Set up QEMU (for arm64 builds)
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3

      # finally run goreleaser to build and publish all artifacts:
      - name: Deploy Autotag Release
        # TODO(vtopc): switch to the `goreleaser/goreleaser-action` GHA?
        run: |
          curl -sL https://git.io/goreleaser | bash -s -- --parallelism=2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
